// rollup.config.js (generated by @wdio/electron-bundler)
// Package: fixture-bundler-esm_simple-ts-config@1.0.0
// Generated: 2025-08-11T14:02:14.270Z
// Configurations: 2 (ESM, CJS)

// This file was auto-generated. Modifications will be overwritten.
// To make changes, edit your wdio-bundler configuration instead.

import typescript from '@rollup/plugin-typescript';
import nodeExternals from 'rollup-plugin-node-externals';

const esmConfig = {
  input: 'src/index.ts',
  output: {
    format: 'esm',
    dir: './dist/esm',
    sourcemap: true,
    plugins: [
      {
        name: 'emit-package-json',
        generateBundle() {
          this.emitFile({
            type: 'asset',
            fileName: 'package.json',
            source: '{ "type": "module" }',
          });
        },
      },
    ],
  },
  plugins: [
    typescript({
      compilerOptions: {
        outDir: './dist/esm',
        declaration: true,
        declarationMap: true,
      },
    }),
    nodeExternals(),
    {
      name: 'warn-to-error',
      onLog(level, log) {
        if (level === 'warn') {
          this.error(log);
        }
      },
    },
  ],
};

const cjsConfig = {
  input: 'src/index.ts',
  output: {
    format: 'cjs',
    dir: './dist/cjs',
    sourcemap: true,
    exports: 'named',
    dynamicImportInCjs: false,
    plugins: [
      {
        name: 'emit-package-json',
        generateBundle() {
          this.emitFile({
            type: 'asset',
            fileName: 'package.json',
            source: '{ "type": "commonjs" }',
          });
        },
      },
    ],
  },
  plugins: [
    typescript({
      compilerOptions: {
        outDir: './dist/cjs',
        declaration: true,
        declarationMap: true,
      },
    }),
    nodeExternals(),
    {
      name: 'warn-to-error',
      onLog(level, log) {
        if (level === 'warn') {
          this.error(log);
        }
      },
    },
  ],
};

export default [esmConfig, cjsConfig];
