name: CI

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}

env:
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  # Build on Linux first since it's the fastest and its artifacts are used by all other jobs
  build:
    name: Build [Linux]
    uses: ./.github/workflows/_ci-build.reusable.yml
    with:
      os: 'ubuntu-latest'

  # Run linting after build to use the build artifacts
  lint:
    name: Lint [Linux]
    needs: [build]
    uses: ./.github/workflows/_ci-lint.reusable.yml
    with:
      cache_key: ${{ needs.build.outputs.cache_key }}

  # Run unit tests after linting to ensure code quality first
  unit-matrix:
    name: Unit [${{ matrix.os == 'ubuntu-latest' && 'Linux' || matrix.os == 'windows-latest' && 'Windows' || 'macOS' }}]
    needs: [build, lint]
    strategy:
      fail-fast: false
      matrix:
        # Test on all major operating systems to ensure cross-platform compatibility
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    uses: ./.github/workflows/_ci-unit.reusable.yml
    with:
      os: ${{ matrix.os }}
      build_id: ${{ needs.build.outputs.build_id }}
      artifact_size: ${{ needs.build.outputs.artifact_size }}
      cache_key: ${{ needs.build.outputs.cache_key }}

  # Run package tests after unit tests to ensure the package is built correctly
  package-matrix:
    name: Package [${{ matrix.os == 'ubuntu-latest' && 'Linux' || matrix.os == 'windows-latest' && 'Windows' || 'macOS' }}]
    needs: [build, lint]
    strategy:
      fail-fast: false
      matrix:
        # Test on all major operating systems to ensure cross-platform compatibility
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    uses: ./.github/workflows/_ci-package.reusable.yml
    with:
      os: ${{ matrix.os }}
      build_id: ${{ needs.build.outputs.build_id }}
      artifact_size: ${{ needs.build.outputs.artifact_size }}
      cache_key: ${{ needs.build.outputs.cache_key }}

  # Run build tests outside of the main Linux build job.
  build-matrix:
    name: Build [${{ matrix.os == 'ubuntu-latest' && 'Linux' || matrix.os == 'windows-latest' && 'Windows' || 'macOS' }}]
    needs: [build, lint]
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'macos-latest']
    uses: ./.github/workflows/_ci-build.reusable.yml
    with:
      os: ${{ matrix.os }}

  # E2E test matrix strategy:
  # - Run tests across 3 operating systems (Linux, Windows, macOS)
  # - Test 3 scenarios (builder, forge, no-binary)
  # - Test 2 module types (ESM, CJS)
  # - Optimize for GitHub Actions concurrency limits
  e2e-matrix:
    name: E2E [${{ matrix.os == 'ubuntu-latest' && 'Linux' || matrix.os == 'windows-latest' && 'Windows' || 'macOS' }}] - ${{ matrix.scenario }}${{ matrix.type != '*' && format(' ({0})', matrix.type) || '' }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        # Test across all major operating systems
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        # Test all application scenarios
        scenario: ['builder', 'forge', 'no-binary']
        # Test both module types and wildcard for combined tests
        type: ['esm', 'cjs', '*']
        exclude:
          # Optimization: All platforms run ESM and CJS separately for consistent resource management
          # This prevents individual jobs from running too many test variants simultaneously
          - os: 'ubuntu-latest'
            type: '*'
          - os: 'windows-latest'
            type: '*'
          - os: 'macos-latest'
            type: '*'
    uses: ./.github/workflows/_ci-e2e.reusable.yml
    with:
      os: ${{ matrix.os }}
      node-version: '20'
      scenario: ${{ matrix.scenario }}
      type: ${{ matrix.type }}
      build_id: ${{ needs.build.outputs.build_id }}
      artifact_size: ${{ needs.build.outputs.artifact_size }}
      cache_key: ${{ needs.build.outputs.cache_key }}

  # Mac Universal builds require special handling
  # These are separate from regular macOS tests because they use a different build command
  e2e-mac-universal-matrix:
    name: E2E [macOS-U] - ${{ matrix.scenario }}${{ matrix.type != '*' && format(' ({0})', matrix.type) || '' }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        # Test both application scenarios
        scenario: ['forge', 'builder']
        # Test both module types and wildcard for combined tests
        type: ['esm', 'cjs', '*']
        exclude:
          # Optimization: Both forge and builder tests run ESM and CJS separately for better error isolation
          - scenario: 'forge'
            type: '*'
          - scenario: 'builder'
            type: '*'
    uses: ./.github/workflows/_ci-e2e.reusable.yml
    with:
      os: 'macos-latest'
      node-version: '20'
      build-command: 'build:mac-universal'
      scenario: ${{ matrix.scenario }}
      type: ${{ matrix.type }}
      build_id: ${{ needs.build.outputs.build_id }}
      artifact_size: ${{ needs.build.outputs.artifact_size }}
      cache_key: ${{ needs.build.outputs.cache_key }}
