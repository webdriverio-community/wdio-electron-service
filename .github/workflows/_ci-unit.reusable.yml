name: Unit Tests
description: 'Runs unit tests across different operating systems'

on:
  workflow_call:
    # Make this a reusable workflow, no value needed
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows

env:
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  # This job runs unit tests on multiple Node.js versions and operating systems
  test:
    name: Unit - ${{ matrix.os == 'ubuntu-latest' && 'Linux' || matrix.os == 'windows-latest' && 'Windows' || 'macOS' }}
    strategy:
      # Continue with other tests even if one fails
      fail-fast: false
      matrix:
        # Currently only testing on Node.js 20
        # Add more versions here if needed for backward compatibility
        node-version: ['20']
        # Test on all major operating systems to ensure cross-platform compatibility
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}
    steps:
      # Standard checkout with SSH key for private repositories
      - name: üë∑ Checkout Repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      # Set up Node.js and PNPM using the reusable action
      - name: üõ†Ô∏è Setup Development Environment
        uses: ./.github/workflows/actions/setup-workspace
        with:
          node-version: ${{ matrix.node-version }}

      # Download the pre-built packages from the build job
      # This ensures all tests use the same build artifacts
      - name: üì¶ Download Build Artifacts
        uses: ./.github/workflows/actions/download-archive
        with:
          name: wdio-electron-service
          path: wdio-electron-service-build
          filename: artifact.zip
          cache_key_prefix: wdio-electron-build
          exact_cache_key: ${{ github.run_id && format('{0}-{1}-{2}-{3}', 'Linux', 'wdio-electron-build', 'wdio-electron-service', github.run_id) || '' }}

      # Verify the extracted dist directories exist
      - name: üîç Verify Extracted Files
        id: verify-build
        shell: bash
        run: |
          # Provide a single, concise summary of build information
          echo "::notice::Build info: ID=${{ needs.build.outputs.build_id || 'N/A' }}, Size=${{ needs.build.outputs.artifact_size || 'N/A' }} bytes"

          # Check for distribution directories (minimal validation)
          DIST_DIRS=$(find "${{ github.workspace }}" -path "*/dist" -type d | wc -l)
          if [ "$DIST_DIRS" -gt 0 ]; then
            echo "Verification passed: Found $DIST_DIRS dist directories"
          else
            echo "::warning::No dist directories found, build extraction may have failed"
          fi

      # Run unit tests using Turbo
      # The --only flag ensures we only run tests for the packages that have changed
      - name: üß™ Execute Unit Tests
        run: pnpm run test:unit --only
        shell: bash
